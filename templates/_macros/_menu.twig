{# public macro for displaying menu items #}
{% macro showMenuItems(cat = null) %}
{% import _self as self %}

    {% if cat is null %}
        {% set foodItems = craft.entries().section('menu').all() %}
        {% set products = craft.products.type('supplies').limit(10).all() %}
    {% else %}
        {% set foodItems = craft.entries().section('menu').relatedTo(cat) %}
        {% set menuItems = craft.products.type('menuItems').relatedTo(cat) %}
    {% endif %}

    {% for item in menuItems.all() %}
        {# get variant for product item #}
        {% set variant = item.defaultVariant %}

        <div class="FoodItem">
            <div class="FoodItem-info"> 
                <h5 class="FoodItem-title">{{ item.title }}</h5>
                <p>{{ item.fiDescription }}</p>
                <p class="FoodItem-price">{{ variant.price | currency('USD') }}</p>

                <form method="POST">
                    {{ actionInput('commerce/cart/update-cart') }}
                    {{ hiddenInput('successMessage', ('Added '~ item.title ~' to the cart.')|hash) }}
                    {{ csrfInput() }}

                    <input type="hidden" name="purchasableId" value="{{ variant.id }}">                    
                    <div class="addRow">
                        {% if item.availableForPurchase %}
                        <input class="button" type="submit" value="Add to Menu">  
                        <input class="qty" type="number" name="qty" min="1" max="99" value="1">
                        {% else %}                  
                        <input class="button" type="submit" value="Item Unavailable">  
                        {% endif %}
                    </div>
                </form>

            </div>
            {% set img = item.fiImage.one() %}
            <span class="FoodItem-image" style="background-image: url({{ img.url }});"></span>
        </div>
    {% endfor %}

{% endmacro showMenuItems %}

{% macro showCart(allowEdits = true, showSelectBtn = false) %}
{% import _self as self %}

{% set cart = craft.commerce.carts.cart %}
    {# {% dd(cart.fields) %} #}  

    {% if cart.lineItems | length %}
        {% if allowEdits %}    
        <form method="post">
            <input type="hidden" name="action"
                    value="commerce/cart/update-cart">
            <input type="hidden" name="cartUpdatedNotice"
                    value="Updated line items.">
            {# {{ redirectInput('/store/cart') }} #}
            {{ csrfInput() }}
        {% endif %}
            {#   <h5>Here's the custom field: {{ cart.myText }} </h5> #}
            <div class="FoodMenu-choices">
                {# show items in cart #}
                {% for item in cart.lineItems %}
                <div class="FoodMenu-item">
                    <p class="qty">{{ item.qty }}</p>
                    <p class="name">{{ item.description }}</p>
                    <p class="price">{{ (item.price * item.qty) | currency(cart.currency) }}</p>
                    {% if allowEdits %}
                        <p class="remove jsRemoveLineItem" data-line-item-id="{{ item.id }}" title="Remove">X</p>
                    {% else %}
                        <p class="remove" data-line-item-id="{{ item.id }}" title="Remove">&nbsp;</p>
                    {% endif %}
                </div>
                {% endfor %}

                {% if not cart.hasErrors() %}
                    {# show totals #}
                    {% if cart.getTotalDiscount() %}
                    <div class="FoodMenu-item">
                        <p class="qty">&nbsp;</p>
                        <p class="name">Subtotal: </p>
                        <p class="price">{{ cart.itemTotalAsCurrency }}</p>
                        <p class="remove" title="Remove">&nbsp;</p>
                    </div>     
                    {% endif %}                   
                    <hr class="FoodMenu-seperator">
                    {% if cart.getTotalDiscount() %}
                    <div class="FoodMenu-item">
                        <p class="qty">&nbsp;</p>
                        <p class="name">Total Discounts: </p>
                        <p class="price discounted">{{ cart.getTotalDiscount()|commerceCurrency(cart.currency) }}</p>
                        <p class="remove" title="Remove">&nbsp;</p>
                    </div>
                    {% endif %}
                    <div class="FoodMenu-total">
                        <p class="qty">&nbsp;</p>
                        <p class="name">Total: </p>
                        <p class="price">{{ cart.totalPrice | commerceCurrency(cart.currency) }}</p>
                        <p class="remove" title="Remove">&nbsp;</p>
                    </div>                        
                {% endif %}
            </div>

        {% if allowEdits %}
                <span class="FoodItem-button button"><a href="{{ url('cart') }}">Checkout</a></span>
                {% if showSelectBtn %}
                <span class="FoodItem-button button off"><a href="{{ url('menu#select') }}">Back to Selections</a></span>
                {% endif %}
        </form>
        {% endif %}


    {% else %}
        {# <form method="post"> #}
            <div class="FoodMenu-item">
                <p>You have no menu items selected. Please make a selection to get started.</p>
            </div>
        {# </form> #}
    {% endif %}

{% endmacro showCart %}


{% macro showOrderDetails(cart = null) %}

    {% if cart is not null %}
        <div class="itemRow">
            <span class="qty hdr">Qty</span>
            <span class="name hdr">Description</span>
            <span class="price hdr">Price</span>
            <span class="remove hdr">Remove</span>
        </div>
        {% for item in cart.lineItems %}
        <div class="itemRow">
            {% set liID = ("lineItems["~item.id~"]") %}
            {% set liRemove = ("lineItems["~item.id~"][remove]") %}
            {% set liQty = ("lineItems["~item.id~"][qty]") %}
            {% set liError = item.hasErrors() ? (' - '~item.getFirstError('qty')) : '' %}
            {% set liErrorClass = '' %}
            {% if item.getFirstError('qty') %}
                {% set liErrorClass = 'itemError' %}
            {% endif %}

            {{ hiddenInput(liID, item.id) }}
            {{ input('number',  liQty, 
                                item.qty, 
                                { class: "qty "~liErrorClass, min: '1', max: '99',  }) }}
            <span class="name {% if item.hasErrors() %}cartError{% endif %}">{{ item.description }}{{ liError }}</span>
            <span class="price">{{ (item.price * item.qty) | currency(cart.currency) }}</span>
            {{ input('checkbox', liRemove, '1', { class: 'remove'  }) }} 
        </div>
        {% endfor %}
        {% if cart.getTotalDiscount() %}
        <div class="itemRow">
            <span class="qty">&nbsp;</span>
            <span class="name">Subtotal:</span>
            <span class="price">{{ cart.itemTotalAsCurrency }}</span>
            <span class="remove">&nbsp;</span>
        </div>
        {% endif %}

        <div class="itemRow">
            <hr>
        </div>
        {% if cart.getTotalDiscount() %}
        <div class="itemRow">
            <span class="qty">&nbsp;</span>
            <span class="name">Total Discounts:</span>
            <span class="price discounted">{{ cart.getTotalDiscount()|commerceCurrency(cart.currency) }}</span>
            <span class="remove">&nbsp;</span>
        </div>
        {% endif %}
        <div class="itemRow">
            <span class="qty">&nbsp;</span>
            <span class="name heavy">Order Total:</span>
            <span class="price heavy">{{ cart.totalPrice | currency(cart.currency) }}</span>
            <span class="remove">&nbsp;</span>
        </div>
    
    {% endif %}   
    
{% endmacro showOrderDetails %}

{#
    <div class="itemRow">
        <span class="qty hdr">Qty</span>
        <span class="name hdr">Description</span>
        <span class="price hdr">Price</span>
        <span class="remove hdr">Remove</span>
    </div>
    {% for item in cart.lineItems %}
    <div class="itemRow">
        {% set liID = ("lineItems["~item.id~"]") %}
        {% set liRemove = ("lineItems["~item.id~"][remove]") %}
        {% set liQty = ("lineItems["~item.id~"][qty]") %}

        {{ hiddenInput('entryId', liID) }}
        {{ input('number', liQty, item.qty, { class: 'qty', min: '1', max: '99',  }) }}
        <span class="name">{{ item.description }}</span>
        <span class="price">{{ (item.price * item.qty) | currency(cart.currency) }}</span>
        {{ input('checkbox', liRemove, '1', { class: 'remove'  }) }} 
    </div>
    {% endfor %}
    <div class="itemRow">
        <hr>
    </div>
    <div class="itemRow">
        <span class="qty">&nbsp;</span>
        <span class="name heavy">Order Total:</span>
        <span class="price  heavy">{{ cart.totalPrice | currency(cart.currency) }}</span>
        <span class="remove">&nbsp;</span>
    </div>
#}
